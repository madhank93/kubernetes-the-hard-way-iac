---
- name: Generate certs in host machine
  when: inventory_hostname == "localhost"
  block:
    - name: Generate the CA configuration file, certificate, and private key
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cfssl gencert -initca {{ playbook_dir }}/roles/certificate-authority/templates/ca-csr.json | cfssljson -bare ca
        executable: /bin/bash
      changed_when: true

    - name: Generate the admin client certificate and private key
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cfssl gencert \
            -ca=ca.pem \
            -ca-key=ca-key.pem \
            -config={{ playbook_dir }}/roles/certificate-authority/templates/ca-config.json \
            -profile=kubernetes \
            {{ playbook_dir }}/roles/certificate-authority/templates/admin-csr.json | cfssljson -bare admin
        executable: /bin/bash
      changed_when: true

    - name: Generate worker csr json files
      loop: "{{ worker_plane_ip }}"
      loop_control:
        index_var: index
      ansible.builtin.template:
        src: "worker-csr.json.j2"
        dest: "{{ playbook_dir }}/worker-{{ index }}-csr.json"
        mode: preserve

    - name: Generate a certificate and private key for each Kubernetes worker node
      loop: "{{ worker_plane_ip }}"
      loop_control:
        index_var: index
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cfssl gencert \
            -ca=ca.pem \
            -ca-key=ca-key.pem \
            -config={{ playbook_dir }}/roles/certificate-authority/templates/ca-config.json \
            -hostname=ip-10-0-1-2{{ index }},{{ worker_plane_public_ip[index] }},{{ item }} \
            -profile=kubernetes \
            {{ playbook_dir }}/worker-{{ index }}-csr.json | cfssljson -bare worker-{{ index }}
        executable: /bin/bash
      changed_when: true

    - name: Generate the kube-controller-manager client certificate and private key
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cfssl gencert \
            -ca=ca.pem \
            -ca-key=ca-key.pem \
            -config={{ playbook_dir }}/roles/certificate-authority/templates/ca-config.json \
            -profile=kubernetes \
            {{ playbook_dir }}/roles/certificate-authority/templates/kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager
        executable: /bin/bash
      changed_when: true

    - name: Generate the kube-proxy client certificate and private key
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cfssl gencert \
            -ca=ca.pem \
            -ca-key=ca-key.pem \
            -config={{ playbook_dir }}/roles/certificate-authority/templates/ca-config.json \
            -profile=kubernetes \
            {{ playbook_dir }}/roles/certificate-authority/templates/kube-proxy-csr.json | cfssljson -bare kube-proxy
        executable: /bin/bash
      changed_when: true

    - name: Generate the kube-scheduler client certificate and private key
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cfssl gencert \
            -ca=ca.pem \
            -ca-key=ca-key.pem \
            -config={{ playbook_dir }}/roles/certificate-authority/templates/ca-config.json \
            -profile=kubernetes \
            {{ playbook_dir }}/roles/certificate-authority/templates/kube-scheduler-csr.json | cfssljson -bare kube-scheduler
        executable: /bin/bash
      changed_when: true

    - name: Generate the Kubernetes API Server certificate and private key
      vars:
        kube_hostname: "kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.cluster,kubernetes.svc.cluster.local"
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cfssl gencert \
            -ca=ca.pem \
            -ca-key=ca-key.pem \
            -config={{ playbook_dir }}/roles/certificate-authority/templates/ca-config.json \
            -hostname=10.32.0.1,10.0.1.10,10.0.1.11,10.0.1.12,{{ kubernetes_public_address }},127.0.0.1,{{ kube_hostname }} \
            -profile=kubernetes \
            {{ playbook_dir }}/roles/certificate-authority/templates/kubernetes-csr.json | cfssljson -bare kubernetes
        executable: /bin/bash
      changed_when: true

    - name: Generate the service-account certificate and private key
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cfssl gencert \
            -ca=ca.pem \
            -ca-key=ca-key.pem \
            -config={{ playbook_dir }}/roles/certificate-authority/templates/ca-config.json \
            -profile=kubernetes \
            {{ playbook_dir }}/roles/certificate-authority/templates/service-account-csr.json | cfssljson -bare service-account
        executable: /bin/bash
      changed_when: true
