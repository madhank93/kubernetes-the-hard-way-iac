---
- name: Bootstrap kubernetes controller nodes
  when: inventory_hostname in groups['controller']
  block:
    - name: Ensure kubernetes directory exists
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: u=rwx,g=rx,o=rx
      loop:
        - /etc/kubernetes/config/
        - /var/lib/kubernetes/

    - name: Download and Copy Kubernetes binaries
      loop:
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler
        - kubectl
      ansible.builtin.get_url:
        url: https://dl.k8s.io/v{{ kubernetes.version }}/bin/{{ os.name }}/{{ os.arch }}/{{ item }}
        dest: /usr/local/bin
        mode: u=rwx,g=rx,o=rx

    - name: Move pem files into lib folder
      loop:
        - ca.pem
        - ca-key.pem
        - kubernetes-key.pem
        - kubernetes.pem
        - service-account-key.pem
        - service-account.pem
        - encryption-config.yaml
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /var/lib/kubernetes/{{ item }}
        mode: u=rwx,g=rx,o=rx

    - name: Retrieve Internal IP Address
      ansible.builtin.uri:
        url: http://169.254.169.254/latest/meta-data/local-ipv4
        return_content: true
      register: internal_ip

    - name: Create kube-apiserver systemd unit file
      ansible.builtin.template:
        src: kube-apiserver.service.j2
        dest: /etc/systemd/system/kube-apiserver.service
        mode: u=rwx,g=rx,o=rx

    - name: Move the kube-controller-manager kubeconfig into place
      ansible.builtin.command:
        cmd: |
          mv kube-controller-manager.kubeconfig /var/lib/kubernetes/
      changed_when: true

    - name: Create kube-controller-manager systemd unit file
      ansible.builtin.template:
        src: kube-controller-manager.service.j2
        dest: /etc/systemd/system/kube-controller-manager.service
        mode: u=rwx,g=rx,o=rx

    - name: Move the kube-scheduler kubeconfig into place
      ansible.builtin.command:
        cmd: |
          mv kube-scheduler.kubeconfig /var/lib/kubernetes/
      changed_when: true

    - name: Copy kubernetes schdeuler file
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/roles/bootstrapping-kubernetes-controllers/templates/kube-scheduler.yaml"
        dest: "/etc/kubernetes/config/kube-scheduler.yaml"
        mode: u=rwx,g=rx,o=rx

    - name: Create kube-scheduler systemd unit file
      ansible.builtin.template:
        src: kube-scheduler.service.j2
        dest: /etc/systemd/system/kube-scheduler.service
        mode: u=rwx,g=rx,o=rx

    - name: Ensure kube-apiserver started
      ansible.builtin.systemd:
        name: kube-apiserver
        state: restarted
        daemon_reload: true
        enabled: true

    - name: Ensure kube-controller-manager started
      ansible.builtin.systemd:
        name: kube-controller-manager
        state: restarted
        daemon_reload: true
        enabled: true

    - name: Ensure kube-scheduler started
      ansible.builtin.systemd:
        name: kube-scheduler
        state: restarted
        daemon_reload: true
        enabled: true

    - name: Copy kubernetes schdeuler file
      ansible.builtin.copy:
        src: "hosts"
        dest: "/etc/hosts"
        mode: u=rwx,g=rx,o=rx


- name: Configure RBAC
  when: inventory_hostname in groups['controller'] | first
  block:
    - name: Copy Cluster role into controller
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/roles/bootstrapping-kubernetes-controllers/templates/cluster_role.yaml"
        dest: /home/ubuntu
        mode: u=rwx,g=rx,o=rx
    - name: Copy Cluster role binding into controller
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/roles/bootstrapping-kubernetes-controllers/templates/cluster_role_binding.yaml"
        dest: /home/ubuntu
        mode: u=rwx,g=rx,o=rx
    - name: Apply cluster role kubernetes file
      ansible.builtin.shell:
        cmd: |
          kubectl apply --kubeconfig admin.kubeconfig -f cluster_role.yaml
      changed_when: true

    - name: Apply cluster role binding kubernetes file
      ansible.builtin.shell:
        cmd: |
          kubectl apply --kubeconfig admin.kubeconfig -f cluster_role_binding.yaml
      changed_when: true
