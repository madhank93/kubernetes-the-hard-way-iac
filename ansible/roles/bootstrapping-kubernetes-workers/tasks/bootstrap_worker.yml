---
- name: Bootstrap worker nodes
  when: inventory_hostname == "worker"
  block:
    - name: Install the OS dependencies
      ansible.builtin.apt:
        pkg:
          - socat
          - conntrack
          - ipset
      update_cache: true

    - name: Disable swap
      ansible.builtin.command:
        cmd: |
          sudo swapoff -a
      changed_when: true

    - name: Ensure folders exists
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      mode: u=rwx,g=r,o=r
      loop:
        - "/etc/cni/net.d"
        - "/opt/cni/bin"
        - "/var/lib/kubelet"
        - "/var/lib/kube-proxy"
        - "/var/lib/kubernetes"
        - "/var/run/kubernetes"
        - "/etc/ccontainerd"
        - "tmp"

    - name: Download and copy Kubernetes binaries
      loop:
        - kubectl
        - kube-proxy
        - kubelet
      ansible.builtin.unarchive:
        src: https://dl.k8s.io/v{{ kubernetes.version }}/bin/{{ os.name }}/{{ os.arch }}/{{ item }}
        dest: /usr/local/bin/{{ item }}
        remote_src: true
        mode: u=rwx,g=r,o=r

    - name: Download and install crictl
      ansible.builtin.unarchive:
        src: https://github.com/kubernetes-sigs/cri-tools/releases/download/\
          v{{ crictl.version }}/crictl-v{{ crictl.version }}-{{ os.name }}-{{ os.arch }}.tar.gz
        dest: /usr/local/bin/
        remote_src: true
        mode: u=rwx,g=r,o=r

    - name: Download and install runc
      ansible.builtin.get_url:
        url: https://github.com/opencontainers/runc/releases/download/v{{ runc.version }}/runc.{{ os.arch }}
        dest: /usr/local/bin/runc
        mode: u=rwx,g=r,o=r

    - name: Download and install cni plugin
      ansible.builtin.unarchive:
        src: https://github.com/containernetworking/plugins/releases/download/v{{ cni.version }}/cni-plugins-{{ os.name }}-{{ os.arch }}-v{{ cni.version }}.tgz
        dest: /opt/cni/bin/
        remote_src: true
        mode: u=rwx,g=r,o=r

    - name: Download and unarchive containerd
      ansible.builtin.unarchive:
        src: https://github.com/containerd/containerd/releases/download/\
          v{{ containerd.version }}/containerd-{{ containerd.version }}-{{ os.name }}-{{ os.arch }}.tar.gz
        dest: /tmp
        remote_src: true
        mode: u=rwx,g=r,o=r

    - name: Move the containerd contents to the destination directory
      ansible.builtin.command:
        cmd: mv /tmp/bin/* /bin/
      changed_when: true

    - name: Retrieve the Pod CIDR range for the current compute instance
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          curl -s http://169.254.169.254/latest/user-data/ \
            | tr "|" "\n" | grep "^pod-cidr" | cut -d"=" -f2
      changed_when: false
      register: pod_cidr

    - name: Create bridge network configuration file
      ansible.builtin.template:
        src: 10-bridge.conf.j2
        dest: /etc/cni/net.d/10-bridge.conf
        mode: u=rwx,g=r,o=r

    - name: Copy loopback network configuration file
      ansible.builtin.copy:
        src: 99-loopback.conf
        dest: /etc/cni/net.d/99-loopback.conf
        mode: u=rwx,g=r,o=r
      changed_when: true

    - name: Copy the containerd configuration file
      ansible.builtin.copy:
        src: config.toml
        dest: /etc/containerd/config.toml
        mode: u=rwx,g=r,o=r
      changed_when: true

    - name: Copy the containerd.service systemd unit file
      ansible.builtin.copy:
        src: containerd.service
        dest: /etc/systemd/system/containerd.service
        mode: u=rwx,g=r,o=r
      changed_when: true

    - name: Retrieve worker name
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          curl -s http://169.254.169.254/latest/user-data/ \
            | tr "|" "\n" | grep "^name" | cut -d"=" -f2
      changed_when: false
      register: worker_name

    - name: Move the kubelet files
      ansible.builtin.command:
        cmd: |
          sudo mv {{ worker_name }}-key.pem {{ worker_name }}.pem /var/lib/kubelet/
          sudo mv {{ worker_name }}.kubeconfig /var/lib/kubelet/kubeconfig
          sudo mv ca.pem /var/lib/kubernetes/
      changed_when: true

    - name: Copy the kubelet config file
      ansible.builtin.template:
        src: kubelet-config.yaml
        dest: /var/lib/kubelet/kubelet-config.yaml
        mode: u=rwx,g=r,o=r
      changed_when: true

    - name: Move the Kubernetes proxy
      ansible.builtin.command:
        cmd: |
          sudo mv kube-proxy.kubeconfig /var/lib/kube-proxy/kubeconfig
      changed_when: true

    - name: Start containerd systemd service
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: true
        daemon_reload: true

    - name: Start kubelet systemd service
      ansible.builtin.systemd:
        name: kubelet
        state: restarted
        enabled: true
        daemon_reload: true

    - name: Start kube-proxy systemd service
      ansible.builtin.systemd:
        name: kube-proxy
        state: restarted
        enabled: true
        daemon_reload: true
